{"version":3,"sources":["constants.js","App.js","index.js"],"names":["BASE_URL","SETTINGS","autoplay","dots","infinite","speed","autoplayspeed","slidesToShow","slidesToScroll","MySlider","urlParams","URLSearchParams","window","location","search","refresh","has","get","occasion","interval","state","photos","gettingPhotos","getPhotos","setState","fetch","constants","then","response","json","catch","error","console","log","clearInterval","setInterval","this","map","photo","url","sender","urlType","receivedAt","Date","toLocaleTimeString","timeZone","slideStyle","width","height","maxWidth","maxHeight","marginTop","transform","style","textAlign","fontSize","startsWith","src","alt","autoPlay","muted","type","divFromPhoto","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAaA,EAAW,8EAEXC,EAAW,CACtBC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,MAAO,KACPC,cAAe,KACfC,aAAc,EACdC,eAAgB,G,OCmCZC,E,4MAEJC,UAAY,IAAIC,gBAAgBC,OAAOC,SAASC,Q,EAChDC,QAAU,EAAKL,UAAUM,IAAI,WAAa,EAAKN,UAAUO,IAAI,WAAa,I,EAC1EC,SAAW,EAAKR,UAAUM,IAAI,YAAc,EAAKN,UAAUO,IAAI,YAAc,c,EAE7EE,SAAW,K,EAEXC,MAAQ,CACNC,OAAQ,KACRC,eAAe,G,EAGjBC,UAAY,WAEL,EAAKH,MAAME,eAAiB,EAAKE,SAAS,CAACF,eAAe,IAC/DG,MAAMC,EAAqB,aAAe,EAAKR,UAC5CS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKJ,SAAS,CAC9BH,OAAQO,EACRN,eAAe,OAEhBQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,WAAYF,MACtC,EAAKZ,UAAYe,cAAc,EAAKf,UACxC,EAAKA,SAAWgB,aAAY,kBAAM,EAAKZ,cAA0B,GAAb,EAAKR,QAAW,M,uDAGtE,WACEqB,KAAKb,c,oBAGP,WACE,OAAKa,KAAKhB,MAAMC,QAAUe,KAAKhB,MAAME,cAC5B,kDAGL,cAAC,IAAD,2BAAYI,GAAZ,aACIU,KAAKhB,MAAMC,OAAOgB,KAAI,SAAAC,GAAK,OA7ElB,SAACA,GACpB,IAAMC,EAAMD,EAAMC,IAChBC,EAASF,EAAME,OACfC,EAAUH,EAAMG,QAChBC,EAAa,IAAIC,KAAKL,EAAMI,YACzBE,mBAAmB,QAAS,CAAEC,SAAU,qBAC3CC,EAAa,CACXC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVC,UAAW,OACXC,UAAW,OACXC,UAAW,2BAMb,OACE,gCACE,sBAA8BC,MAPnB,CACbC,UAAW,SACXC,SAAU,QAKR,UACG,4BAAIf,IADP,aAC0BE,KADhB,UAAYF,GAGpBC,EAAQe,WAAW,UACnB,qBACEC,IAAKlB,EAELmB,IAAK,OAASnB,EACdc,MAAOP,GAFFP,GAKP,uBAAOoB,UAAQ,EAACC,OAAK,EAACP,MAAOP,EAA7B,SACI,wBAAQW,IAAKlB,EAAKsB,KAAMpB,QAbtB,OAASF,GA0DkBuB,CAAaxB,a,GArCjCyB,IAAMC,WAkDdC,MAJf,WACE,OAAO,cAAC,EAAD,KCvFTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d5ea734c.chunk.js","sourcesContent":["export const BASE_URL = 'https://y5gfm8ypt6.execute-api.us-east-1.amazonaws.com/default/weddingPhoto';\n\nexport const SETTINGS = { // https://react-slick.neostack.com/docs/api/\n  autoplay: true,\n  dots: false,\n  infinite: true,\n  speed: 5500,\n  autoplayspeed: 1500,\n  slidesToShow: 3,\n  slidesToScroll: 1\n};","import React from 'react';\nimport Slider from 'react-slick';\nimport * as constants from './constants';\n\nconst divFromPhoto = (photo) => {\n  const url = photo.url,\n    sender = photo.sender,\n    urlType = photo.urlType,\n    receivedAt = new Date(photo.receivedAt)\n      .toLocaleTimeString('en-US', { timeZone: 'America/New_York' }),\n    slideStyle = {\n      width: '31vw',\n      height: 'auto',\n      maxWidth: '31vw',\n      maxHeight: '91vh',\n      marginTop: '50vh',\n      transform: 'translate3d(0, -50%, 0)'\n    }, textStyle = {\n      textAlign: 'center',\n      fontSize: '24px'\n    };\n\n    return (\n      <div key={'div_' + url}>\n        <div key={'sender_' + sender} style={textStyle}>\n          {<b>{sender}</b>}{` @ ${receivedAt}`}\n        </div>\n        { urlType.startsWith('image/') ?\n          <img\n            src={url}\n            key={url}\n            alt={'alt_' + url}\n            style={slideStyle}\n          />\n          :\n          <video autoPlay muted style={slideStyle}>\n              <source src={url} type={urlType} />\n          </video>\n        }\n      </div>\n    );\n};\n\n\nclass MySlider extends React.Component {\n\n  urlParams = new URLSearchParams(window.location.search);\n  refresh = this.urlParams.has('refresh') ? this.urlParams.get('refresh') : 300; // refresh mins\n  occasion = this.urlParams.has('occasion') ? this.urlParams.get('occasion') : 'khayat-motz';\n\n  interval = null;\n\n  state = {\n    photos: null,\n    gettingPhotos: true\n  };\n\n  getPhotos = () => {\n\n    if (!this.state.gettingPhotos) { this.setState({gettingPhotos: true}) };\n    fetch(constants.BASE_URL + '?occasion=' + this.occasion)\n      .then(response => response.json())\n      .then(response => this.setState({\n        photos: response,\n        gettingPhotos: false\n      }))\n      .catch(error => console.log('error >>', error));\n    if (this.interval) { clearInterval(this.interval) };\n    this.interval = setInterval(() => this.getPhotos(), this.refresh*60*1000);\n  };\n\n  componentDidMount(){\n    this.getPhotos();\n  };\n\n  render() {\n    if (!this.state.photos || this.state.gettingPhotos) {\n      return <p>Getting photos...</p>\n    } else {\n      return (\n        <Slider {...constants.SETTINGS}>\n          { this.state.photos.map(photo => divFromPhoto(photo)) }\n        </Slider>\n      );\n    }; \n  };\n\n};\n\n\nfunction App() {\n  return <MySlider />\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}