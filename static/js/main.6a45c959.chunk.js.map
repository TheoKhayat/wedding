{"version":3,"sources":["App.js","index.js"],"names":["MySlider","settings","autoplay","dots","infinite","speed","autoplayspeed","slidesToShow","slidesToScroll","interval","state","photos","gettingPhotos","getPhotos","console","log","setState","fetch","then","response","json","catch","error","clearInterval","setInterval","this","map","photo","url","sender","receivedAt","Date","toLocaleString","split","src","alt","style","width","height","onLoad","e","natHeight","target","naturalHeight","natWidth","naturalWidth","newHeight","divFromPhoto","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA6CMA,E,4MAEJC,SAAW,CACTC,UAAU,EACVC,MAAM,EACNC,UAAU,EACVC,MAAO,KACPC,cAAe,IACfC,aAAc,EACdC,eAAgB,G,EAGlBC,SAAW,K,EAEXC,MAAQ,CACNC,OAAQ,KACRC,eAAe,G,EAGjBC,UAAY,WACVC,QAAQC,IAAI,qBACP,EAAKL,MAAME,eAAiB,EAAKI,SAAS,CAACJ,eAAe,IAC/DK,MAAM,+EACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKH,SAAS,CAC9BL,OAAQQ,EACRP,eAAe,OAEhBS,OAAM,SAAAC,GAAK,OAAIR,QAAQC,IAAI,OAAQO,MAClC,EAAKb,UAAYc,cAAc,EAAKd,UACxC,EAAKA,SAAWe,aAAY,kBAAM,EAAKX,cAAa,M,uDAGtD,WACEY,KAAKZ,c,oBAGP,WACE,OAAKY,KAAKf,MAAMC,QAAUc,KAAKf,MAAME,cAC5B,kDAGL,cAAC,IAAD,2BAAYa,KAAKxB,UAAjB,aACIwB,KAAKf,MAAMC,OAAOe,KAAI,SAAAC,GAAK,OArFlB,SAACA,GACpB,IAAIC,EAAMD,EAAMC,IACdC,EAASF,EAAME,OAGfC,EAAa,IAAIC,KAAKJ,EAAMG,YAAYE,iBAAiBC,MAAM,MAAM,GAGrE,OACE,gCACE,qBACEC,IAAKN,EAELO,IAAK,OAASP,EACdQ,MAAO,CACLC,MAAM,GAAD,OAZR,GAYQ,MACLC,OAAO,GAAD,OAAK,MAAL,OAERC,OAAQ,SAAAC,GACN,IAAIC,EAAYD,EAAEE,OAAOC,cACvBC,EAAWJ,EAAEE,OAAOG,aACpBC,EAAY,KAEVL,EAAYG,EACd9B,QAAQC,IAAI,WAAY0B,EAAWG,IAKnC9B,QAAQC,IAAI,YAAa0B,EAAWG,GACpCE,EAAS,UAAUL,EAAUG,EA3BlC,GA2Bc,MAETJ,EAAEE,OAAON,MAAME,OAASQ,KApBvBlB,GAwBP,wCAAkCC,EAAlC,cAA8CC,IAApC,UAAYD,KA3Bd,OAASD,GA4EkBmB,CAAapB,a,GA3CjCqB,IAAMC,WAwDdC,MAJf,WACE,OAAO,cAAC,EAAD,KC9FTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a45c959.chunk.js","sourcesContent":["import React from 'react';\nimport Slider from 'react-slick';\n\nconst divFromPhoto = (photo) => {\n  let url = photo.url,\n    sender = photo.sender,\n    vw = 31,\n    // vh = 91;\n    receivedAt = new Date(photo.receivedAt).toLocaleString().split(', ')[1];\n    // urlType = photo.urlType;\n\n    return (\n      <div key={'div_' + url}>\n        <img\n          src={url}\n          key={url}\n          alt={'alt_' + url}\n          style={{\n            width: `${vw}vw`,\n            height: `${2.71*vw}vh`\n          }}\n          onLoad={e => {\n            let natHeight = e.target.naturalHeight,\n              natWidth = e.target.naturalWidth,\n              newHeight = null,\n              newWidth = null;\n            if (natHeight > natWidth) { // portrait\n              console.log('portrait', natHeight, natWidth);\n              // newWidth = `${vw*(natWidth/natHeight)}vw`;\n              // console.log('newWidth:', newWidth);\n              // e.target.style.width = newWidth; // natWidth * (currentHeight/natHeight);\n            } else { // landscape\n              console.log('landscape', natHeight, natWidth);\n              newHeight = `${vw*(natHeight/natWidth)}vh`;\n              // console.log('newHeight:', newHeight);\n              e.target.style.height = newHeight; // natHeight * (currentWidth/natWidth);\n            };\n          }}\n        />\n        <div key={'sender_' + sender}>{`${sender} @ ${receivedAt}`}</div>\n      </div>\n    );\n};\n\n\nclass MySlider extends React.Component {\n\n  settings = { // https://react-slick.neostack.com/docs/api/\n    autoplay: true,\n    dots: false,\n    infinite: true,\n    speed: 13000,\n    autoplayspeed: 8000,\n    slidesToShow: 3,\n    slidesToScroll: 1\n  };\n\n  interval = null;\n\n  state = {\n    photos: null,\n    gettingPhotos: true\n  };\n\n  getPhotos = () => {\n    console.log('getting photos...');\n    if (!this.state.gettingPhotos) { this.setState({gettingPhotos: true}) };\n    fetch('https://y5gfm8ypt6.execute-api.us-east-1.amazonaws.com/default/weddingPhoto')\n      .then(response => response.json())\n      .then(response => this.setState({\n        photos: response,\n        gettingPhotos: false\n      }))\n      .catch(error => console.log('e >>', error));\n    if (this.interval) { clearInterval(this.interval) };\n    this.interval = setInterval(() => this.getPhotos(), 600000); // 600000 = every 10 mins\n  };\n\n  componentDidMount(){\n    this.getPhotos();\n  };\n\n  render() {\n    if (!this.state.photos || this.state.gettingPhotos) {\n      return <p>Getting photos...</p>\n    } else {\n      return (\n        <Slider {...this.settings}>\n          { this.state.photos.map(photo => divFromPhoto(photo)) }\n        </Slider>\n      );\n    }; \n  };\n\n};\n\n\nfunction App() {\n  return <MySlider />\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}