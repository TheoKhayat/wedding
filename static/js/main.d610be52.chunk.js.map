{"version":3,"sources":["constants.js","Slideshow.js","App.js","index.js"],"names":["BASE_URL","SLIDE_SETTINGS","autoplay","autoplayspeed","dots","infinite","slidesToScroll","slidesToShow","speed","swipeToSlide","SLIDE_STYLE","width","height","maxWidth","maxHeight","marginTop","transform","TEXT_STYLE","textAlign","fontSize","TIMEZONES","est","cst","mst","pst","Slides","urlParams","URLSearchParams","window","location","search","refresh","has","get","occasion","timezone","interval","state","photos","gettingPhotos","getPhotos","setState","fetch","constants","then","response","json","catch","error","console","log","clearInterval","setInterval","this","map","photo","url","sender","urlType","receivedAt","Date","toLocaleTimeString","timeZone","slideStyle","textStyle","style","startsWith","src","alt","autoPlay","muted","type","divFromPhoto","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAaA,EAAW,8EAEXC,EAAiB,CAC5BC,UAAU,EACVC,cAAe,KACfC,MAAM,EACNC,UAAU,EACVC,eAAgB,EAChBC,aAAc,EACdC,MAAO,KACPC,cAAc,GAGHC,EAAc,CACzBC,MAAO,OACPC,OAAQ,OACRC,SAAU,OACVC,UAAW,OACXC,UAAW,OACXC,UAAW,2BAGAC,EAAa,CACxBC,UAAW,SACXC,SAAU,QAGCC,EAAY,CACvBC,IAAK,mBACLC,IAAK,kBACLC,IAAK,aACLC,IAAK,uB,OCIDC,E,4MACJC,UAAY,IAAIC,gBAAgBC,OAAOC,SAASC,Q,EAChDC,QAAU,EAAKL,UAAUM,IAAI,WAAa,EAAKN,UAAUO,IAAI,WAAa,I,EAC1EC,SAAW,EAAKR,UAAUM,IAAI,YAAc,EAAKN,UAAUO,IAAI,YAAc,c,EAC7EE,SAAW,EAAKT,UAAUM,IAAI,MAAQ,EAAKN,UAAUO,IAAI,MAAQ,M,EAEjEG,SAAW,K,EAEXC,MAAQ,CACNC,OAAQ,KACRC,eAAe,G,EAGjBC,UAAY,WAEL,EAAKH,MAAME,eAAiB,EAAKE,SAAS,CAACF,eAAe,IAC/DG,MAAMC,EAAqB,aAAe,EAAKT,UAC5CU,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAC,GAAQ,OAAI,EAAKJ,SAAS,CAC9BH,OAAQO,EACRN,eAAe,OAEhBQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAI,WAAYF,MACtC,EAAKZ,UAAYe,cAAc,EAAKf,UACxC,EAAKA,SAAWgB,aAAY,kBAAM,EAAKZ,cAA0B,GAAb,EAAKT,QAAW,M,uDAGtE,WACEsB,KAAKb,c,oBAGP,WAAU,IAAD,OACP,OAAKa,KAAKhB,MAAMC,QAAUe,KAAKhB,MAAME,cAC5B,kDAGL,cAAC,IAAD,2BAAYI,GAAZ,aACIU,KAAKhB,MAAMC,OAAOgB,KAAI,SAAAC,GAAK,OApElB,SAACA,EAAOpB,GAC3B,IAAMqB,EAAMD,EAAMC,IAChBC,EAASF,EAAME,OACfC,EAAUH,EAAMG,QAChBC,EAAa,IAAIC,KAAKL,EAAMI,YACzBE,mBAAmB,QAAS,CAAEC,SAAUnB,EAAoBR,KAC/D4B,EAAapB,EACbqB,EAAYrB,EAEZ,OACE,gCACE,sBAA8BsB,MAAOD,EAArC,UACG,4BAAIP,IADP,aAC0BE,KADhB,UAAYF,GAGpBC,EAAQQ,WAAW,UACnB,qBACEC,IAAKX,EAELY,IAAK,OAASZ,EACdS,MAAOF,GAFFP,GAKP,uBAAOa,UAAQ,EAACC,OAAK,EAACL,MAAOF,EAA7B,SACI,wBAAQI,IAAKX,EAAKe,KAAMb,QAbtB,OAASF,GA0DkBgB,CAAajB,EAAO,EAAKpB,oB,GArC/CsC,IAAMC,WA6CZjD,ICxEAkD,MAJf,WACE,OAAO,cAAC,EAAD,KCDTC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d610be52.chunk.js","sourcesContent":["export const BASE_URL = 'https://y5gfm8ypt6.execute-api.us-east-1.amazonaws.com/default/weddingPhoto';\n\nexport const SLIDE_SETTINGS = { // https://react-slick.neostack.com/docs/api/\n  autoplay: true,\n  autoplayspeed: 1500,\n  dots: false,\n  infinite: true,\n  slidesToScroll: 1,\n  slidesToShow: 3,\n  speed: 5500,\n  swipeToSlide: true\n};\n\nexport const SLIDE_STYLE = {\n  width: '31vw',\n  height: 'auto',\n  maxWidth: '31vw',\n  maxHeight: '91vh',\n  marginTop: '50vh',\n  transform: 'translate3d(0, -50%, 0)'\n};\n\nexport const TEXT_STYLE = {\n  textAlign: 'center',\n  fontSize: '24px'\n};\n\nexport const TIMEZONES = {\n  est: 'America/New_York',\n  cst: 'America/Chicago',\n  mst: 'US/Arizona',\n  pst: 'America/Los_Angeles'\n};\n","import React from 'react';\nimport Slider from 'react-slick';\nimport * as constants from './constants';\n\nconst divFromPhoto = (photo, timezone) => {\n  const url = photo.url,\n    sender = photo.sender,\n    urlType = photo.urlType,\n    receivedAt = new Date(photo.receivedAt)\n      .toLocaleTimeString('en-US', { timeZone: constants.TIMEZONES[timezone] }),\n    slideStyle = constants.SLIDE_STYLE,\n    textStyle = constants.TEXT_STYLE;\n\n    return (\n      <div key={'div_' + url}>\n        <div key={'sender_' + sender} style={textStyle}>\n          {<b>{sender}</b>}{` @ ${receivedAt}`}\n        </div>\n        { urlType.startsWith('image/') ?\n          <img\n            src={url}\n            key={url}\n            alt={'alt_' + url}\n            style={slideStyle}\n          />\n          :\n          <video autoPlay muted style={slideStyle}>\n              <source src={url} type={urlType} />\n          </video>\n        }\n      </div>\n    );\n};\n\n\nclass Slides extends React.Component {\n  urlParams = new URLSearchParams(window.location.search);\n  refresh = this.urlParams.has('refresh') ? this.urlParams.get('refresh') : 300; // refresh mins\n  occasion = this.urlParams.has('occasion') ? this.urlParams.get('occasion') : 'khayat-motz';\n  timezone = this.urlParams.has('tz') ? this.urlParams.get('tz') : 'est';\n\n  interval = null;\n\n  state = {\n    photos: null,\n    gettingPhotos: true\n  };\n\n  getPhotos = () => {\n\n    if (!this.state.gettingPhotos) { this.setState({gettingPhotos: true}) };\n    fetch(constants.BASE_URL + '?occasion=' + this.occasion)\n      .then(response => response.json())\n      .then(response => this.setState({\n        photos: response,\n        gettingPhotos: false\n      }))\n      .catch(error => console.log('error >>', error));\n    if (this.interval) { clearInterval(this.interval) };\n    this.interval = setInterval(() => this.getPhotos(), this.refresh*60*1000);\n  };\n\n  componentDidMount(){\n    this.getPhotos();\n  };\n\n  render() {\n    if (!this.state.photos || this.state.gettingPhotos) {\n      return <p>Getting photos...</p>\n    } else {\n      return (\n        <Slider {...constants.SLIDE_SETTINGS}>\n          { this.state.photos.map(photo => divFromPhoto(photo, this.timezone)) }\n        </Slider>\n      );\n    }; \n  };\n\n};\n\nexport default Slides;\n","import React from 'react';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Slides from './Slideshow';\n\nfunction App() {\n  return <Slides />\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}